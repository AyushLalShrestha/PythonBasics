# ZMQ Sockets used by LIv5 apps


# Start of Collection Layer
# for ftp/scp collector/fetcher
[batch_collector_out]
socket = PUSH:connect:tcp://127.0.0.1:5501
format = marshal

# For Batch Processor
[batch_processor_in]
socket = PULL:bind:tcp://127.0.0.1:5501
identifier = batch_processor
format = marshal
# reporting time_freq
benchmarker = 10

[collector_out]
socket = PUSH:connect:tcp://127.0.0.1:5502
format = repo_norm_json
benchmarker = 10
# End of Collection Layer


# Start of Normalization Layer
[norm_front_in]
socket = PULL:bind:tcp://*:5502
identifier = normalizer
format = repo_norm_json
benchmarker = 10

[norm_front_out]
socket = PUSH:bind:tcp://127.0.0.1:5505
format = json
# count_freq
benchmarker = 10

[normalizer_in]
socket = PULL:connect:tcp://127.0.0.1:5505
format = json
benchmarker = 10

[normalizer_out]
socket = PUSH:connect:tcp://127.0.0.1:5503
format = json
benchmarker = 10
# End of Normalization Layer

#Start of Raw log forwarding layer (originates in norm_front)
[norm_front_secondory_out]
socket = PUSH:bind:ipc://%(LOGINSPECT_HOME)s/var/wire/norm_front_secondory_out
format = json
benchmarker = 10

#input wire for raw syslog forwarder service
[raw_syslog_forwarder_in]
socket = PULL:connect:ipc://%(LOGINSPECT_HOME)s/var/wire/norm_front_secondory_out
format = json
benchmarker = 10
#End of Raw log forwarding layer

# Start of Storage Layer
[storage_in]
socket = PULL:bind:tcp://*:5503
identifier = storage
format = repo_norm_json
benchmarker = 10

[repo_storage_front_out]
socket = PUSH:connect:ipc://%(LOGINSPECT_HOME)s/var/wire/repo_storage_in_%(repo_name)s
format = json
benchmarker = 10

[repo_storage_in]
socket = PULL:bind:ipc://%(LOGINSPECT_HOME)s/var/wire/repo_storage_in_%(repo_name)s
identifier = %(repo_name)s
format = json
benchmarker = 10

[repo_storage_out]
socket = PUSH:connect:ipc://%(LOGINSPECT_HOME)s/var/wire/repo_indexing_in_%(repo_name)s
format = json
benchmarker = 10

# informer and indexsearcher_* have this on their config.json file
#[file_responder_request]
#socket = DEALER:connect:tcp://127.0.0.1:5571  # 5573,5575 etc
#format = json

# file_reponder_* have this on their config.json file
#[file_responder_reply]
#socket = ROUTER:bind:tcp://*:5571  # 5573,5575 etc
#format = json
# End of Storage Layer


# Start of Indexing Layer
# indexersearcher_* have this on their config.json file
#[repo_indexer_in]
#socket = PULL:bind:ipc://%(LOGINSPECT_HOME)s/var/wire/repo_indexing_in_%(repo_name)s
#identifier = %(repo_name)s
#format = json

# indexersearcher_* have this on their config.json file
#[repo_indexer_out]
#socket = PUSH:connect:tcp://127.0.0.1:55
#format = json

# informer have this on it's config.json file
#[repo_searcher_request]
#socket = ROUTER:bind:tcp://*:5570  # 5572,5574 etc
#identifier = searcher
#format = json

# indexersearcher_* have this on their config.json file
#[repo_searcher_reply]
#socket = ROUTER:bind:tcp://*:5570  # 5572,5574 etc
#identifier = searcher
#format = json

[indexing_search_merger_request]
socket = DEALER:connect:tcp://127.0.0.1:5555
format = json

[indexing_search_merger_reply]
socket = ROUTER:bind:tcp://127.0.0.1:5555
identifier = indexing_search_merger
format = json

[indexing_premerger_request]
socket = DEALER:connect:tcp://127.0.0.1:5556
format = json

[premerger_result_publisher]
socket = PUSH:connect:tcp://127.0.0.1:5506
format = json

[premerger_result_subscriber]
socket = PULL:bind:tcp://127.0.0.1:5506
format = json
# End of Indexing Layer


# Start of Filter Service
#socket = PULL:bind:tcp://127.0.0.1:5512
#identifier = filterengine
#format = json
# End of Filter Service


# Start of Corrleation Service
#socket = PULL:bind:tcp://*:5513
#identifer = cepengine
#format = json
# End of Correlation Service


# Start of Informer Service
[informer_request]
socket = DEALER:connect:tcp://127.0.0.1:5504
format = json

[informer_reply]
# Never change this address
socket = ROUTER:bind:tcp://*:5504
identifier = informer
format = json
# End of Informer Service

#start of enrichment service
[enrichment_request]
socket = DEALER:connect:tcp://127.0.0.1:5515
format = json

[enrichment_reply]
socket = ROUTER:bind:tcp://127.0.0.1:5515
identifier = enrichment_db_populator
format = json
#end of enrichment service

# Start of norm lookup service
[norm_lookup_in]
socket = ROUTER:bind:tcp://127.0.0.1:5513
identifier = norm_lookup
format = json
# End of norm lookup service


# Start of Labeling Service
# indexersearcher_* have this on their config.json file
#[labeling_request]
#socket = DEALER:connect:tcp://127.0.0.1:5507
#format = json

# labeling have this on it's config.json file
#[labeling_reply]
#socket = ROUTER:bind:tcp://127.0.0.1:5507
#identifier = labeling
#format = json
# End of Labeling Service


# Start of Lookup Service
# indexersearcher_* have this on their config.json file
[lookup_request]
socket = DEALER:connect:tcp://127.0.0.1:5510
identifier = lookup
format = json

[lookup_reply]
socket = ROUTER:bind:tcp://127.0.0.1:5510
identifier = lookup
format = json
# End of Lookup Service


# Start of Alert Dispatcher Service
[alert_dispatcher_request]
socket = PUSH:connect:tcp://127.0.0.1:5508
format = json

[alert_dispatcher_reply]
socket = PULL:bind:tcp://127.0.0.1:5508
identifier = alert_dispatcher
format = json
# End of Alert Dispatcher Service


# Start of liv4_collector Service
[liv4_collector_progress_request]
socket = REQ:connect:ipc://%(LOGINSPECT_HOME)s/var/wire/liv4_collector_%(repo_name)s
format = json

[liv4_collector_progress_reply]
socket = REP:bind:ipc://%(LOGINSPECT_HOME)s/var/wire/liv4_collector_%(repo_name)s
format = json
# End of liv4_collector Service

# Start of streamer Service
[normalizer_subscriber_endpoint]
socket = PUSH:connect:tcp://127.0.0.1:5530
format = json
# End of streamer Service

# Start of streamer Service
[lpc_subscriber_endpoint]
socket = PUSH:connect:tcp://127.0.0.1:5531
format = json
# End of streamer Service
